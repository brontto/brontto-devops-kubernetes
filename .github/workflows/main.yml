name: Release application

on: 
  push:
    paths:
      - 'project/**'
      - '.github/workflows/main.yml'
       
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  BACK_IMAGE: todo_server
  FRONT_IMAGE: todo_front
  DAILY_IMAGE: todo_daily
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY}}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
     
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@main
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          exports_default_credentials: true
      
      - run: |- 
          gcloud --quiet auth configure-docker
      
      - run: |- 
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      
      - name: Build 
        run: |-
          cd ./project/todo_project/todo_server/ && docker build \
            --tag "gcr.io/$PROJECT_ID/$BACK_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            .
          cd ./../../../project/todo_project/todo_front/ && docker build \
            --tag "gcr.io/$PROJECT_ID/$FRONT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            .
          cd ./../../../project/todo_project/todo_daily/ && docker build \
            --tag "gcr.io/$PROJECT_ID/$DAILY_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            .
            
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$BACK_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$FRONT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$DAILY_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
      
      - name: Set up Secrets
        run: |-
            wget https://github.com/mozilla/sops/releases/download/v3.7.3/sops_3.7.3_amd64.deb
            sudo apt install ./sops_3.7.3_amd64.deb
            sops --decrypt ./project/mongodb/mongodb-secret.enc.yaml > ./project/mongodb/mongodb-secret.yaml
      
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
      
      - name: Deploy
        run: |-
          cd ./project/
          kubectl create namespace project-${GITHUB_REF#refs/heads/} --dry-run=true -o yaml | kubectl apply -f -
          kubectl config set-context --current --namespace=project-${GITHUB_REF#refs/heads/}
          kustomize edit set namespace  project-${GITHUB_REF#refs/heads/}
          kustomize edit set image gcr.io/PROJECT_ID/BACK-IMAGE=gcr.io/$PROJECT_ID/$BACK_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image gcr.io/PROJECT_ID/FRONT-IMAGE=gcr.io/$PROJECT_ID/$FRONT_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image gcr.io/PROJECT_ID/DAILY-IMAGE=gcr.io/$PROJECT_ID/$DAILY_IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment todoserver-dep
          kubectl rollout status deployment todofront-dep
          kubectl get services -o wide
        
            
            
